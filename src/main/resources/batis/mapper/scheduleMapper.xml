<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="timepill.schedule.service.impl.ScheduleDAO">

<!-- 알람 리스트 -->
<select id="selectAlarmList" resultType="ScheduleVO">
SELECT
	ALARM_ID
	, ALARM_TYPE
	, ALARM_TIME
	, ALARM_USE_AT
FROM 
	alarm_set
WHERE 
	USER_ID = #{userId}
</select>

<!-- 알람 아이디 가져오기 -->
<select id="selectAlarm" resultType="java.lang.String">
SELECT
	ALARM_ID
FROM 
	alarm_set
WHERE 
	USER_ID = #{userId}
	AND ALARM_TYPE = #{alarmType}
</select>

<!-- 마지막 알람 아이디 가져오기 -->
<select id="selectLastAlarmId" resultType="java.lang.String">
SELECT 
	MAX(ALARM_ID) 
FROM alarm_set
WHERE ALARM_ID NOT LIKE 'ALARM_X%'
</select>

<!-- 알람 생성(회원가입) -->
<insert id="insertAlarmSet">
INSERT INTO alarm_set(
	ALARM_ID
	, USER_ID
	, ALARM_TYPE
	, ALARM_TIME
) VALUES(
	#{alarmId}
	, #{userId}
	, #{alarmType}
	, #{alarmTime}
)
</insert>

<!-- 알람 수정 -->
<update id="updateAlarm">
UPDATE 
	alarm_set 
SET 
	ALARM_TIME = #{alarmTime}
	, ALARM_INTERVAL = #{alarmInterval}
	, RPT_INTERVAL = #{rptInterval}
	, ALARM_USE_AT = #{alarmUseAt}
WHERE
	ALARM_ID = #{alarmId}
	AND USER_ID = #{userId}
</update>


<!-- 스케줄 리스트 -->
<select id="selectScheduleList" resultType="ScheduleVO">
SELECT 
	A.MED_ID 
	, A.ALARM_ID 
	, B.ALARM_TYPE
	, B.ALARM_TIME
	, C.MED_NAME
	, C.START_DATE
	, C.END_DATE
	, C.DURATION
	, C.MED_STATUS
FROM 
	alarm_reg A
	JOIN alarm_set B ON A.ALARM_ID = B.ALARM_ID
	JOIN med_info C ON A.MED_ID = C.MED_ID
WHERE 
	C.USER_ID = #{userId}
	AND ALARM_USE_AT = 'Y'
ORDER BY 
	B.ALARM_TYPE, A.MED_ID
</select>

<!-- 스케줄 정보 -->
<select id="selectSchedule" resultType="ScheduleVO">
SELECT
	A.MED_ID
	, A.ALARM_ID
FROM alarm_reg A JOIN alarm_set B ON A.ALARM_ID = B.ALARM_ID
WHERE (A.MED_ID, B.ALARM_TYPE) IN (
		(#{medId}, #{alarmType})
	)
</select>

<!-- 스케줄 등록 -->
<insert id="insertSchedule">
INSERT INTO alarm_reg(
	MED_ID
	, ALARM_ID
) VALUES(
	#{medId}
	, #{alarmId}
)
</insert>

<!-- 스케줄 삭제 -->
<delete id="deleteSchedule">
DELETE FROM alarm_reg
WHERE (MED_ID, ALARM_ID) IN (
	SELECT 
		A.MED_ID
		, A.ALARM_ID
	FROM 
		alarm_reg A
		LEFT JOIN med_info B ON A.MED_ID = B.MED_ID
		LEFT JOIN alarm_set C ON A.ALARM_ID = C.ALARM_ID
	WHERE 
		A.MED_ID = #{medId}
		AND C.ALARM_TYPE NOT IN (
		<foreach item="resultAlarmType" index="index" collection="alarmTypes" separator=",">
			#{resultAlarmType}
		</foreach>
	)
)
</delete>

</mapper>