<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="timepill.schedule.service.impl.ScheduleDAO">

<!-- 스케줄 리스트 -->
<select id="selectScheduleList" resultType="ScheduleVO">
SELECT 
	A.MED_ID 
	, A.ALARM_ID 
	, B.ALARM_TYPE
	, B.ALARM_TIME
	, C.MED_NAME
	, C.START_DATE
	, C.END_DATE
	, C.MED_STATUS
	, D.SCHE_CHK
FROM 
	schedule A
JOIN
	alarm_set B ON A.ALARM_ID = B.ALARM_ID
JOIN
	med_info C ON A.MED_ID = C.MED_ID
LEFT JOIN (
	SELECT
		MED_ID
		, ALARM_ID
		, SCHE_CHK
	FROM sche_log 
	WHERE 
		LOG_STATUS = 'Y'
		AND USER_ID = #{userId}
) AS D ON D.MED_ID = C.MED_ID AND D.ALARM_ID  = B.ALARM_ID
WHERE 
	C.USER_ID = #{userId}
	AND ALARM_USE_AT = 'Y'
ORDER BY 
	B.ALARM_TYPE
	, A.MED_ID
</select>

<!-- 스케줄 정보 -->
<select id="selectSchedule" resultType="ScheduleVO">
SELECT
	A.MED_ID
	, A.ALARM_ID
FROM 
	schedule A 
JOIN 
	alarm_set B ON A.ALARM_ID = B.ALARM_ID
WHERE(
	A.MED_ID
	, B.ALARM_TYPE
) IN(
	(#{medId}, #{alarmType})
)
</select>

<!-- 스케줄 등록 -->
<insert id="insertSchedule">
INSERT INTO schedule(
	MED_ID
	, ALARM_ID
) VALUES(
	#{medId}
	, #{alarmId}
)
</insert>

<!-- 스케줄 삭제 -->
<delete id="deleteSchedule">
DELETE FROM schedule
WHERE MED_ID = #{medId}
	<if test='medStatus != "N" and alarmTypes != null'>
	AND ALARM_ID NOT IN (
	    SELECT ALARM_ID
	    FROM alarm_set
	    WHERE ALARM_TYPE IN (
	        <foreach item="resultAlarmType" index="index" collection="alarmTypes" separator=",">
	            #{resultAlarmType}
	        </foreach>
	    )
	)
	</if>
</delete>


<!-- 스케줄 로그 조회 -->
<select id="selectScheduleLog" resultType="ScheduleVO">
SELECT 
	MED_ID
	, ALARM_ID
FROM sche_log
WHERE
	MED_ID = #{medId}
	AND ALARM_ID = #{alarmId}
	AND USER_ID = #{userId}
	<choose>
		<when test="scheDate != null">
			AND SCHE_DATE = #{scheDate}
		</when>
		<otherwise>
			AND SCHE_DATE = CURDATE()
		</otherwise>
	</choose>
</select>

<!-- 스케줄 로그 등록 -->
<insert id="insertScheduleLog">
INSERT INTO sche_log (
	MED_ID
	, ALARM_ID 
	, USER_ID
	, SCHE_DATE 
	, SCHE_CHK 
	, LOG_STATUS 
) VALUES(
	#{medId}
	, #{alarmId}
	, #{userId}
	<choose>
		<when test="scheDate != null">
			, #{scheDate}
		</when>
		<otherwise>
			, CURDATE()
		</otherwise>
	</choose>
	, 'Y'
	, 'Y'
)
</insert>


<!-- 스케줄 로그 수정 -->
<update id="updateScheduleLog">
UPDATE sche_log SET
	<choose>
		<when test="logStatus != null">
			LOG_STATUS = #{logStatus}
		</when>
		<otherwise>
			SCHE_CHK = #{scheChk}
		</otherwise>
	</choose>
WHERE 
	MED_ID = #{medId}
	AND ALARM_ID = #{alarmId}
	AND USER_ID = #{userId}
	<choose>
		<when test="scheDate != null">
			AND SCHE_DATE = #{scheDate}
		</when>
		<otherwise>
			AND SCHE_DATE = CURDATE()
		</otherwise>
	</choose>
</update>


</mapper>