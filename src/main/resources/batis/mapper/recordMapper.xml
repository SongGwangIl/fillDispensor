<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.ac.kopo.record.service.impl.RecordDAO">

	<resultMap type="RecordVO" id="RecordMap">
		<id column="TAKE_ID" property="takeId"/>
		<result column="USER_ID" property="userId"/>
		<result column="TIME_ID" property="timeId"/>
		<result column="TAKE_DATE" property="takeDate"/>
		<result column="TAKE_SUCCESS" property="takeSuccess"/>
		<result column="TAKE_USE_AT" property="takeUseAt"/>
		
		<collection property="scheduleList" ofType="ScheduleVO"> 
			<id column="SCHE_ID" property="scheId"/>
			<result column="USER_ID" property="userId"/>
			<result column="SCHE_TITLE" property="scheTitle"/>
			<result column="SCHE_SELECT" property="scheSelect"/>
			<result column="SCHE_START_DATE" property="scheStartDate"/>
			<result column="SCHE_END_DATE" property="scheEndDate"/>
			<result column="SCHE_DATE_EXPIRES" property="scheDateExpires"/>
		</collection>
		
		<collection property="scheTimeList" ofType="ScheTimeVO"> 
			<id column="TIME_ID" property="timeId"/>
			<result column="SCHE_ID" property="scheId"/>
			<result column="TIME_NAME" property="timeName"/>
			<result column="TIME_ALARM" property="timeAlarm"/>
			<result column="TIME_LIMIT" property="timeLimit"/>
			<result column="RE_ALARM_COUNT" property="reAlarmCount"/>
			<result column="RE_ALARM_TIME" property="reAlarmTime"/>
		</collection>
	</resultMap>
	
	<sql id="search">
		<if test="searchKey == 1">
			AND SCHE_TITLE LIKE CONCAT(CONCAT('%', #{searchValue}), '%')
		</if>
		<if test="searchKey == 2">
			AND TIME_NAME LIKE CONCAT(CONCAT('%', #{searchValue}), '%')
		</if>
		<if test="searchKey == 3">
			AND TAKE_SUCCESS LIKE CONCAT(CONCAT('%', #{searchValue}), '%')
		</if>
	</sql>

	
	<select id="total" resultType="java.lang.Integer">
		SELECT COUNT(*)
		FROM TAKE_LOG TL NATURAL JOIN SCHE_TIME NATURAL JOIN SCHEDULE
		WHERE USER_ID = #{userId}
		AND TAKE_USE_AT = 'Y'
		<include refid="search"></include>
	</select>
	

	<select id="selectLogByAll" resultMap="RecordMap">
		SELECT 
			TAKE_ID
			, USER_ID
			, SCHE_TITLE
			, TIME_ID
			, TIME_NAME 
			, TAKE_DATE
			, TAKE_SUCCESS
		FROM TAKE_LOG TL NATURAL JOIN SCHE_TIME NATURAL JOIN SCHEDULE
		WHERE USER_ID = #{userId}
		AND TAKE_USE_AT = 'Y'
		<include refid="search"></include>
		ORDER BY TAKE_DATE DESC
		LIMIT #{recordPerPage}
		OFFSET #{offset}
	</select>

	<select id="selectLogByDate" resultMap="RecordMap">
		SELECT 
			TAKE_ID
			, USER_ID
			, SCHE_TITLE
			, TIME_ID
			, TIME_NAME 
			, TAKE_DATE
			, TAKE_SUCCESS
		FROM TAKE_LOG TL NATURAL JOIN SCHE_TIME NATURAL JOIN SCHEDULE
		WHERE DATE(TAKE_DATE) = DATE(#{takeDate})
			AND USER_ID = #{userId}
			AND TAKE_USE_AT = 'Y'
		ORDER BY TAKE_DATE
	</select>

	
	<select id="selectAlarmByDate" resultMap="RecordMap">
		SELECT 
			SCHE_ID
			, TIME_ID
			, SCHE_TITLE
			, TIME_NAME
			, TIME_ALARM
		FROM SCHE_TIME NATURAL JOIN SCHEDULE
		<![CDATA[
		WHERE 
        	SCHE_END_DATE >= DATE(#{takeDate})
        	AND SCHE_START_DATE <= DATE(#{takeDate})
        	AND SCHE_HIDE = 'N'
        	AND USER_ID = #{userId}
		]]>
	</select>
	
	<select id="selectChart" resultType="RecordVO">
		SELECT 
		    DATE(DATE_SUB(#{takeDate}, INTERVAL SEQ DAY)) AS TAKEDATE,
		    (
		        SELECT COUNT(*)
		        FROM SCHE_TIME
		        NATURAL JOIN SCHEDULE
		        <![CDATA[
		        WHERE USER_ID = #{userId}
			        AND SCHE_START_DATE <= DATE(DATE_SUB(#{takeDate}, INTERVAL SEQ DAY))
			        AND SCHE_END_DATE >= DATE(DATE_SUB(#{takeDate}, INTERVAL SEQ DAY))
			    ]]>
		    ) AS CNTALARM,
		    (
		        SELECT COUNT(*)
		        FROM TAKE_LOG
		        WHERE USER_ID = #{userId}
		        AND DATE(TAKE_DATE) = DATE(DATE_SUB(#{takeDate}, INTERVAL SEQ DAY))
		        AND TAKE_SUCCESS = 'Y'
		        AND TAKE_USE_AT = 'Y'
		    ) AS CNTTAKELOG
		FROM
		    (
		        SELECT 0 AS SEQ UNION ALL
		        SELECT 1 UNION ALL
		        SELECT 2 UNION ALL
		        SELECT 3 UNION ALL
		        SELECT 4 UNION ALL
		        SELECT 5 UNION ALL
		        SELECT 6
		    ) AS TAKEDATE
	</select>
	
	<insert id="addTakeLog">
		INSERT INTO TAKE_LOG (
			TAKE_ID
			, USER_ID
			, TIME_ID
			, TAKE_DATE
			, TAKE_SUCCESS
			, TAKE_USE_AT
			)
			SELECT
				CONCAT('LOG_', LPAD(NEXT VALUE FOR SQ_SCHE, 6, '0'))
				, #{userId}
				, #{timeId}
				, NOW()
				, CASE
				<![CDATA[
				    WHEN ST.TIME_ALARM > TIME(NOW()) OR ST.TIME_LIMIT < TIME(NOW()) THEN 'N'
				    WHEN ST.TIME_ALARM <= TIME(NOW()) AND ST.TIME_LIMIT >= TIME(NOW()) THEN 'Y'
			    	ELSE 'N'
			    	]]>
				END AS TAKE_SUCCESS
				, 'Y'
		FROM SCHE_TIME ST
		WHERE TIME_ID= #{timeId}
	</insert>
	
	<update id="off">
		UPDATE TAKE_LOG
		SET TAKE_USE_AT = 'N'
		WHERE TAKE_ID = #{takeId}
	</update>
	
	<select id ="selectLogToday" resultType="Integer">
		SELECT COUNT(*)
		FROM TAKE_LOG
		WHERE DATE(TAKE_DATE) = #{takeDate}
			AND TIME_ID = #{timeId}
	</select>
	
	<update id="updateTakeLog">
	    UPDATE TAKE_LOG TL
	    JOIN SCHE_TIME ST ON TL.TIME_ID = ST.TIME_ID
	    SET TL.TAKE_USE_AT = 'Y',
	        TL.TAKE_DATE = #{takeDateTime},
	        TL.TAKE_SUCCESS = CASE
	       <![CDATA[
	            WHEN ST.TIME_ALARM > TIME(NOW()) OR ST.TIME_LIMIT < TIME(NOW()) THEN 'N'
	            WHEN ST.TIME_ALARM <= TIME(NOW()) AND ST.TIME_LIMIT >= TIME(NOW()) THEN 'Y'
	            ELSE 'N'
	            ]]>
	        END
	    WHERE DATE(TL.TAKE_DATE) = DATE(#{takeDateTime})
	        AND TL.TIME_ID = #{timeId}
	</update>
</mapper>